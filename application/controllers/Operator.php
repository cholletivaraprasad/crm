<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Operator extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Operator_model');
    } 

    /*
     * Listing of operators
     */
    function index()
    {
        $data['operators'] = $this->Operator_model->get_all_operators();
        
        $data['_view'] = 'operator/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new operator
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('lco_location','Lco Location','required|max_length[100]');
		$this->form_validation->set_rules('lco_sublocation','Lco Sublocation','required|max_length[100]');
		$this->form_validation->set_rules('lco_name','Lco Name','required|max_length[100]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'lco_location' => $this->input->post('lco_location'),
				'lco_sublocation' => $this->input->post('lco_sublocation'),
				'lco_name' => $this->input->post('lco_name'),
            );
            
            $operator_id = $this->Operator_model->add_operator($params);
            redirect('operator/index');
        }
        else
        {            
            $data['_view'] = 'operator/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a operator
     */
    function edit($id)
    {   
        // check if the operator exists before trying to edit it
        $data['operator'] = $this->Operator_model->get_operator($id);
        
        if(isset($data['operator']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('lco_location','Lco Location','required|max_length[100]');
			$this->form_validation->set_rules('lco_sublocation','Lco Sublocation','required|max_length[100]');
			$this->form_validation->set_rules('lco_name','Lco Name','required|max_length[100]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'lco_location' => $this->input->post('lco_location'),
					'lco_sublocation' => $this->input->post('lco_sublocation'),
					'lco_name' => $this->input->post('lco_name'),
                );

                $this->Operator_model->update_operator($id,$params);            
                redirect('operator/index');
            }
            else
            {
                $data['_view'] = 'operator/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The operator you are trying to edit does not exist.');
    } 

    /*
     * Deleting operator
     */
    function remove($id)
    {
        $operator = $this->Operator_model->get_operator($id);

        // check if the operator exists before trying to delete it
        if(isset($operator['id']))
        {
            $this->Operator_model->delete_operator($id);
            redirect('operator/index');
        }
        else
            show_error('The operator you are trying to delete does not exist.');
    }
    
}
